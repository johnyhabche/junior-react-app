{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\component\\\\header\\\\Header.js\";\nimport { React, Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Fetch_CURRENCY_QUERY, Fetch_CATEGORIES_LINKS_QUERY } from '../../queries/Queries';\nimport './styles/Header.css';\nimport './styles/Actions.css';\nimport './styles/Logo.css';\nimport './styles/Navigation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      links: [],\n      currencies: [],\n      selectedOption: \"\"\n    };\n    this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\n    this.changeQuery = this.changeQuery.bind(this);\n  } //Get currency and Category Query\n\n\n  componentDidMount() {\n    Fetch_CURRENCY_QUERY.then(res => this.setState({\n      currencies: res.data.currencies\n    }));\n    Fetch_CATEGORIES_LINKS_QUERY.then(res => this.setState({\n      links: res.data.categories\n    }));\n  } //send category type to app.js \n  //@param categoryType String\n\n\n  changeQuery(categoryType) {\n    this.props.onChangeCategory(categoryType);\n    this.props.setProductDetail();\n  } //handel currency celected option and send it to app.js\n  //@param event listener e\n\n\n  handleCurrencyChange(e) {\n    this.props.onChangeCurrency(e.target.value);\n    this.setState({\n      selectedOption: e.target.value\n    });\n  } //Close and Open card layout\n  //@param boolean\n\n\n  openCloseCard(bool) {\n    this.setState({\n      openClose: !bool\n    });\n    this.props.openClose(!bool);\n  } //Render Category Navigation\n\n\n  renderNavbar() {\n    return this.state.links.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        onClick: () => this.props.setLink(title.name),\n        to: title.name,\n        children: title.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this));\n  } //generate current currency\n\n\n  currencyData() {\n    return this.state.currencies.map((t, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: t.symbol,\n      className: \"currency-option\",\n      children: [t.symbol, \" \", t.label]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this));\n  }\n\n  render() {\n    var props = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: this.renderNavbar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"logo\",\n            src: \"./a-logo.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currency-container\",\n          onChange: this.handleCurrencyChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shopping-cart\",\n          onClick: () => this.openCloseCard(this.state.openClose),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            value: props.productCount,\n            className: \"fas fa-shopping-cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/component/header/Header.js"],"names":["React","Component","NavLink","Fetch_CURRENCY_QUERY","Fetch_CATEGORIES_LINKS_QUERY","Header","constructor","props","state","links","currencies","selectedOption","handleCurrencyChange","bind","changeQuery","componentDidMount","then","res","setState","data","categories","categoryType","onChangeCategory","setProductDetail","e","onChangeCurrency","target","value","openCloseCard","bool","openClose","renderNavbar","map","title","index","setLink","name","currencyData","t","i","symbol","label","render","productCount"],"mappings":"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","sourcesContent":["import { React, Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Fetch_CURRENCY_QUERY, Fetch_CATEGORIES_LINKS_QUERY }  from '../../queries/Queries';\r\n\r\nimport './styles/Header.css';\r\nimport './styles/Actions.css';\r\nimport './styles/Logo.css';\r\nimport './styles/Navigation.css';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          links: [],\r\n          currencies: [],\r\n          selectedOption: \"\",\r\n    \r\n        }\r\n\r\n        this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\r\n        this.changeQuery = this.changeQuery.bind(this);\r\n      }\r\n\r\n      //Get currency and Category Query\r\n      componentDidMount() {\r\n        Fetch_CURRENCY_QUERY\r\n        .then(res => this.setState({currencies: res.data.currencies}));\r\n\r\n        Fetch_CATEGORIES_LINKS_QUERY\r\n        .then(res => this.setState({links: res.data.categories}));\r\n\r\n      }\r\n      \r\n      //send category type to app.js \r\n      //@param categoryType String\r\n      changeQuery(categoryType) {\r\n        this.props.onChangeCategory(categoryType)\r\n        this.props.setProductDetail()\r\n      }\r\n\r\n      //handel currency celected option and send it to app.js\r\n      //@param event listener e\r\n      handleCurrencyChange(e){\r\n        this.props.onChangeCurrency(e.target.value)\r\n        this.setState({selectedOption: e.target.value })\r\n      }\r\n\r\n      //Close and Open card layout\r\n      //@param boolean\r\n      openCloseCard(bool){\r\n        this.setState({openClose: !bool})\r\n        this.props.openClose(!bool)\r\n      }\r\n\r\n      //Render Category Navigation\r\n      renderNavbar() {\r\n        return (this.state.links.map((title,index) => (\r\n          <li key={index}>\r\n              <NavLink onClick={ () => this.props.setLink(title.name)} to={title.name}>{title.name}</NavLink>\r\n          </li>)\r\n      ))\r\n      }\r\n\r\n      //generate current currency\r\n      currencyData() {\r\n        return (\r\n          this.state.currencies.map((t,i) => (\r\n\r\n            <option \r\n              key={i}\r\n              value={t.symbol}\r\n              className='currency-option'\r\n            >{t.symbol} {t.label}</option >\r\n    \r\n        ))\r\n        )\r\n      }\r\n      \r\n    render() {\r\n      \r\n      var props = this.props;\r\n      return (\r\n        <div className='header'>\r\n            <div className='navigation'>\r\n                {this.renderNavbar()}\r\n            </div>\r\n\r\n            <div className='logo'>\r\n                <NavLink to={\"/\"}>\r\n                   <img alt='logo' src='./a-logo.png' />\r\n                </NavLink>\r\n            </div>\r\n\r\n            <div className='actions'>\r\n            <div className=\"currency-container\"onChange={this.handleCurrencyChange}>\r\n              \r\n              {/* {this.currencyData()} */}\r\n            </div>\r\n\r\n                <div className='shopping-cart' onClick={() => this.openCloseCard(this.state.openClose)}>\r\n\r\n                  <i value={props.productCount} className=\"fas fa-shopping-cart\"></i>\r\n                  \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n      ) \r\n    }\r\n  }\r\n\r\n  export default Header;"]},"metadata":{},"sourceType":"module"}
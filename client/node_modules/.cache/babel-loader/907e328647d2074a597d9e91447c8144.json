{"ast":null,"code":"import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n}); // const Fetch_CURRENCY_QUERY = client.query({\n//     query: gql`\n//     {\n//        currencies {\n//           label\n//            symbol\n//           }\n//         }\n//     `\n// })\n\nclass Query extends Component {\n  constructor(props) {}\n\n  Fetch_PRODUCTS_QUERY(cat) {\n    client.query({\n      query: gql`\n        {\n          category(input: { title: ${cat}}) {\n            name    \n            name\n            products {\n              id\n              name\n              inStock\n              brand\n              description\n              gallery\n              category\n              attributes {\n                name\n                items {\n                  displayValue\n                }\n              }\n              prices {\n                amount\n                currency {\n                  label\n                  symbol\n                }\n              }\n            }\n        \n          }\n        }\n        `\n    });\n  }\n\n}\n\nexport default Query;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/queries/Queries.js"],"names":["ApolloClient","InMemoryCache","gql","client","uri","cache","Query","Component","constructor","props","Fetch_PRODUCTS_QUERY","cat","query"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC5BI,EAAAA,GAAG,EAAC,+BADwB;AAE5BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFqB,CAAjB,CAAf,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,KAAN,SAAoBC,SAApB,CAA8B;AAC5BC,EAAAA,WAAW,CAACC,KAAD,EAAQ,CAElB;;AACCC,EAAAA,oBAAoB,CAACC,GAAD,EAAM;AACxBR,IAAAA,MAAM,CAACS,KAAP,CAAa;AACXA,MAAAA,KAAK,EAAEV,GAAI;AACnB;AACA,qCAAqCS,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BmB,KAAb;AAiCD;;AAtCyB;;AA0C9B,eAAeL,KAAf","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { gql } from '@apollo/client';  \r\n\r\nconst client = new ApolloClient({\r\n    uri:'http://localhost:4000/graphql',\r\n    cache: new InMemoryCache()\r\n  })\r\n  \r\n  \r\n// const Fetch_CURRENCY_QUERY = client.query({\r\n//     query: gql`\r\n//     {\r\n//        currencies {\r\n//           label\r\n//            symbol\r\n//           }\r\n//         }\r\n//     `\r\n// })\r\n\r\nclass Query extends Component {\r\n  constructor(props) {\r\n    \r\n  }\r\n    Fetch_PRODUCTS_QUERY(cat) {\r\n      client.query({\r\n        query: gql`\r\n        {\r\n          category(input: { title: ${cat}}) {\r\n            name    \r\n            name\r\n            products {\r\n              id\r\n              name\r\n              inStock\r\n              brand\r\n              description\r\n              gallery\r\n              category\r\n              attributes {\r\n                name\r\n                items {\r\n                  displayValue\r\n                }\r\n              }\r\n              prices {\r\n                amount\r\n                currency {\r\n                  label\r\n                  symbol\r\n                }\r\n              }\r\n            }\r\n        \r\n          }\r\n        }\r\n        `\r\n      })\r\n    }\r\n\r\n}\r\n      \r\nexport default Query;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\App.js\";\nimport { React, PureComponent } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Content from \"./component/content/Content\";\nimport Header from \"./component/header/Header\";\nimport Home from \"./component/home/Home\";\nimport PDP from \"./component/pdp/PDP\";\nimport CardOverlay from \"./component/card-overlay/CardOverlay\";\nimport Cart from './component/cart/Cart';\nimport Modal from './component/product-modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n      pickedColor: [{\n        id: \"\",\n        color: \"\"\n      }],\n      pickedCapacity: [{\n        id: \"\",\n        capacity: \"\"\n      }],\n      pickedSize: [{\n        id: \"\",\n        size: \"\"\n      }],\n      pickedWithUsb: [{\n        id: \"\",\n        usb: \"\"\n      }],\n      pickedWithTouchID: [{\n        id: \"\",\n        withTouchID: \"\"\n      }],\n      currentCurrency: \"$\",\n      productCategory: \"all\",\n      openCloseCurrency: false,\n      productDetail: [],\n      openClose: false,\n      notAvailable: false,\n      total: [0],\n      openCloseModal: false,\n      addAllOptions: false,\n      product: [],\n      nextProductId: 0\n    };\n    this.changeCurrency = this.changeCurrency.bind(this);\n    this.setLink = this.setLink.bind(this);\n    this.productDetails = this.productDetails.bind(this);\n    this.openCloseCard = this.openCloseCard.bind(this);\n    this.closeCard = this.closeCard.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.handleAttributColor = this.handleAttributColor.bind(this);\n    this.handleAttributSize = this.handleAttributSize.bind(this);\n    this.handleAttributCapacity = this.handleAttributCapacity.bind(this);\n    this.handleAttributWithUSB = this.handleAttributWithUSB.bind(this);\n    this.handleAttributWithTouchID = this.handleAttributWithTouchID.bind(this);\n    this.setTotal = this.setTotal.bind(this);\n    this.handleCurrencyCon = this.handleCurrencyCon.bind(this);\n    this.handleOpenCloseModal = this.handleOpenCloseModal.bind(this);\n  }\n\n  handleOpenCloseModal(bool) {\n    this.setState({\n      openCloseModal: !bool\n    });\n    this.restAttributes();\n  }\n\n  handleCurrencyCon(bool) {\n    this.setState({\n      openCloseCurrency: !bool\n    });\n  }\n\n  changeCurrency(curr) {\n    this.setState({\n      currentCurrency: curr\n    });\n    this.setState({\n      openCloseCurrency: false\n    });\n  }\n\n  setLink(link) {\n    this.notAvailableItem(false);\n    this.restAttributes();\n    this.setState({\n      productCategory: link\n    });\n  }\n\n  productDetails(details) {\n    this.setState({\n      productDetail: details\n    });\n  }\n\n  openCloseCard(bool) {\n    this.setState({\n      openClose: !bool\n    });\n  }\n\n  closeCard(close) {\n    this.setState({\n      openClose: close\n    });\n  }\n\n  notAvailableItem(bool) {\n    this.setState({\n      notAvailable: bool\n    });\n  }\n\n  pleaseAddAllOptions(bool) {\n    this.setState({\n      addAllOptions: !bool\n    });\n  } //Add customer product to card\n  //param picked item object\n\n\n  addToCart(item) {\n    this.restAttributes();\n    const {\n      nextProductId,\n      pickedColor,\n      pickedSize,\n      pickedCapacity,\n      product,\n      pickedWithUsb,\n      pickedWithTouchID\n    } = this.state; // let addedToTotal = [...total];\n    // addedToTotal.push(item.prices[0].amount);\n    // let final = addedToTotal.reduce((res, i) => res +  i);\n    // this.setState({total: final})\n\n    let finalTotal = [];\n    finalTotal = item.prices[0].amount;\n    this.setState({\n      total: finalTotal\n    });\n\n    if (item.inStock === true) {\n      if (item.pickedColor.color && item.pickedCapacity.capacity || item.pickedSize.size || item.pickedCapacity.capacity && item.pickedWithUsb.usb && item.pickedWithTouchID.withTouchID) {\n        this.setState(prevState => {\n          const newItem = { ...item,\n            itemId: nextProductId,\n            qty: 1,\n            color: pickedColor.color,\n            size: pickedSize.size,\n            capacity: pickedCapacity.capacity,\n            usb: pickedWithUsb.usb,\n            touchID: pickedWithTouchID.withTouchID,\n            curImage: 0\n          };\n          return {\n            nextProductId: prevState.nextProductId + 1,\n            product: [...product, newItem]\n          };\n        });\n      } else this.pleaseAddAllOptions(true);\n    } else this.notAvailableItem(true);\n  } //reset all attributes\n\n\n  restAttributes() {\n    this.setState({\n      pickedColor: {\n        id: \"\",\n        color: \"\"\n      }\n    });\n    this.setState({\n      pickedSize: {\n        id: \"\",\n        size: \"\"\n      }\n    });\n    this.setState({\n      pickedCapacity: {\n        id: \"\",\n        capacity: \"\"\n      }\n    });\n    this.setState({\n      pickedWithUsb: {\n        id: \"\",\n        usb: \"\"\n      }\n    });\n    this.setState({\n      pickedWithTouchID: {\n        id: \"\",\n        touchID: \"\"\n      }\n    });\n  } //Delete Item array\n\n\n  onDelete(index) {\n    const {\n      product\n    } = this.state;\n    var array = product.slice();\n    array.splice(index, 1);\n    this.setState({\n      product: array\n    });\n  } //Set picked Item Color\n  //@param attr string, i int\n\n\n  handleAttributColor(attr, i) {\n    this.setState({\n      pickedColor: {\n        id: i,\n        color: attr\n      }\n    });\n  } //Set picked Item Size\n  //@param attr string, i int\n\n\n  handleAttributSize(attr, i) {\n    this.setState({\n      pickedSize: {\n        id: i,\n        size: attr\n      }\n    });\n  } //Set picked Item Capacity\n  //@param attr string, i int\n\n\n  handleAttributCapacity(attr, i) {\n    this.setState({\n      pickedCapacity: {\n        id: i,\n        capacity: attr\n      }\n    });\n  } //Set picked Item usb\n  //@param attr string, i int\n\n\n  handleAttributWithUSB(attr, i) {\n    this.setState({\n      pickedWithUsb: {\n        id: i,\n        usb: attr\n      }\n    });\n  } //Set picked Item with touch id\n  //@param attr string, i int\n\n\n  handleAttributWithTouchID(attr, i) {\n    this.setState({\n      pickedWithTouchID: {\n        id: i,\n        withTouchID: attr\n      }\n    });\n  }\n\n  setTotal(i) {\n    this.setState({\n      total: i\n    });\n  }\n\n  render() {\n    const {\n      product,\n      currentCurrency,\n      openClose,\n      productCategory,\n      productDetail,\n      notAvailable,\n      pickedColor,\n      pickedCapacity,\n      pickedSize,\n      pickedWithTouchID,\n      pickedWithUsb,\n      total,\n      openCloseCurrency,\n      openCloseModal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        className: \"router\",\n        children: [openCloseModal === true ? /*#__PURE__*/_jsxDEV(Modal, {\n          openCloseModal: openCloseModal,\n          handleOpenCloseModal: this.handleOpenCloseModal,\n          productDetails: productDetail,\n          handleAttributColor: this.handleAttributColor,\n          handleAttributSize: this.handleAttributSize,\n          handleAttributCapacity: this.handleAttributCapacity,\n          handleAttributWithTouchID: this.handleAttributWithTouchID,\n          handleAttributWithUSB: this.handleAttributWithUSB,\n          notAvailable: notAvailable,\n          pickedColor: pickedColor,\n          pickedCapacity: pickedCapacity,\n          pickedSize: pickedSize,\n          pickedWithTouchID: pickedWithTouchID,\n          pickedWithUsb: pickedWithUsb,\n          selectedProduct: this.addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Header, {\n          handleCurrencyCon: this.handleCurrencyCon,\n          openCloseCurrency: openCloseCurrency,\n          onChangeCurrency: this.changeCurrency,\n          setLink: this.setLink,\n          openClose: this.openCloseCard,\n          productCount: product.length,\n          currency: currentCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), openClose === true ? /*#__PURE__*/_jsxDEV(CardOverlay, {\n          closeCard: this.closeCard,\n          toCart: product,\n          currency: currentCurrency,\n          total: total,\n          setTotal: this.setTotal,\n          onDelete: this.onDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 37\n        }, this) : '', /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: productCategory,\n            element: /*#__PURE__*/_jsxDEV(Content, {\n              cat: productCategory,\n              productDetail: this.productDetails,\n              currency: currentCurrency,\n              openCloseModal: openCloseModal,\n              handleOpenCloseModal: this.handleOpenCloseModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: productCategory + \"/\" + productDetail.id,\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              productDetails: productDetail,\n              selectedProduct: this.addToCart,\n              currency: currentCurrency,\n              handleAttributColor: this.handleAttributColor,\n              handleAttributSize: this.handleAttributSize,\n              handleAttributCapacity: this.handleAttributCapacity,\n              handleAttributWithTouchID: this.handleAttributWithTouchID,\n              handleAttributWithUSB: this.handleAttributWithUSB,\n              notAvailable: notAvailable,\n              pickedColor: pickedColor,\n              pickedCapacity: pickedCapacity,\n              pickedSize: pickedSize,\n              pickedWithTouchID: pickedWithTouchID,\n              pickedWithUsb: pickedWithUsb\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              selectedProduct: product,\n              currency: currentCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/App.js"],"names":["React","PureComponent","BrowserRouter","Router","Routes","Route","Content","Header","Home","PDP","CardOverlay","Cart","Modal","App","constructor","props","state","active","pickedColor","id","color","pickedCapacity","capacity","pickedSize","size","pickedWithUsb","usb","pickedWithTouchID","withTouchID","currentCurrency","productCategory","openCloseCurrency","productDetail","openClose","notAvailable","total","openCloseModal","addAllOptions","product","nextProductId","changeCurrency","bind","setLink","productDetails","openCloseCard","closeCard","addToCart","onDelete","handleAttributColor","handleAttributSize","handleAttributCapacity","handleAttributWithUSB","handleAttributWithTouchID","setTotal","handleCurrencyCon","handleOpenCloseModal","bool","setState","restAttributes","curr","link","notAvailableItem","details","close","pleaseAddAllOptions","item","finalTotal","prices","amount","inStock","prevState","newItem","itemId","qty","touchID","curImage","index","array","slice","splice","attr","i","render","length"],"mappings":"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","sourcesContent":["import { React, PureComponent } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Content from \"./component/content/Content\";\nimport Header from \"./component/header/Header\";\nimport Home from \"./component/home/Home\";\nimport PDP from \"./component/pdp/PDP\";\nimport CardOverlay from \"./component/card-overlay/CardOverlay\";\nimport Cart from './component/cart/Cart';\nimport Modal from './component/product-modal/Modal'\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n      pickedColor: [{id: \"\", color: \"\"}],\n      pickedCapacity: [{id: \"\", capacity: \"\"}],\n      pickedSize: [{id: \"\", size: \"\"}],\n      pickedWithUsb: [{id: \"\", usb: \"\"}],\n      pickedWithTouchID: [{id: \"\", withTouchID: \"\"}],\n      currentCurrency: \"$\",\n      productCategory: \"all\",\n      openCloseCurrency: false,\n      productDetail: [],\n      openClose: false,\n      notAvailable: false,\n      total:[0],\n      openCloseModal: false,\n      addAllOptions: false,\n      product: [\n\n      ],\n      nextProductId: 0,\n    }\n    \n    this.changeCurrency = this.changeCurrency.bind(this);\n    this.setLink = this.setLink.bind(this);\n    this.productDetails = this.productDetails.bind(this);\n    this.openCloseCard = this.openCloseCard.bind(this);\n    this.closeCard = this.closeCard.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.handleAttributColor = this.handleAttributColor.bind(this);\n    this.handleAttributSize = this.handleAttributSize.bind(this);\n    this.handleAttributCapacity = this.handleAttributCapacity.bind(this);\n    this.handleAttributWithUSB = this.handleAttributWithUSB.bind(this);\n    this.handleAttributWithTouchID = this.handleAttributWithTouchID.bind(this);\n    this.setTotal = this.setTotal.bind(this);\n    this.handleCurrencyCon = this.handleCurrencyCon.bind(this);\n    this.handleOpenCloseModal = this.handleOpenCloseModal.bind(this);\n  }\n\n  handleOpenCloseModal(bool) {\n    this.setState({openCloseModal: !bool})\n    this.restAttributes();\n  }\n  handleCurrencyCon(bool) {\n    this.setState({openCloseCurrency: !bool})\n  }\n\n  changeCurrency(curr) {\n    this.setState({currentCurrency: curr})\n    this.setState({openCloseCurrency: false})\n  }\n\n  setLink(link) {\n    this.notAvailableItem(false)\n    this.restAttributes();\n    this.setState({productCategory: link})\n  }\n\n  productDetails(details) {\n    this.setState({productDetail: details})\n  }\n\n  openCloseCard(bool) {\n    this.setState({openClose: !bool})\n  }\n  closeCard(close) {\n    this.setState({openClose: close})\n  }\n  notAvailableItem(bool) {\n    this.setState({notAvailable: bool})\n  }\n  pleaseAddAllOptions(bool) {\n    this.setState({addAllOptions: !bool})\n  }\n  //Add customer product to card\n  //param picked item object\n  addToCart(item) {\n    this.restAttributes();\n    const { nextProductId,\n            pickedColor,\n            pickedSize,\n            pickedCapacity,\n            product,\n            pickedWithUsb,\n            pickedWithTouchID,\n           } = this.state;\n\n    \n    // let addedToTotal = [...total];\n    // addedToTotal.push(item.prices[0].amount);\n    // let final = addedToTotal.reduce((res, i) => res +  i);\n    // this.setState({total: final})\n    let finalTotal = []\n      \n      finalTotal = item.prices[0].amount;\n      this.setState({total: finalTotal})\n\n\n    if(item.inStock === true) {\n      if( item.pickedColor.color && item.pickedCapacity.capacity || item.pickedSize.size || item.pickedCapacity.capacity && item.pickedWithUsb.usb && item.pickedWithTouchID.withTouchID) {\n        this.setState((prevState) => {\n          const newItem = {...item,\n              itemId: nextProductId, qty: 1,\n              color: pickedColor.color,\n              size: pickedSize.size,\n              capacity: pickedCapacity.capacity,\n              usb: pickedWithUsb.usb,\n              touchID: pickedWithTouchID.withTouchID,\n              curImage: 0\n        };\n          return {\n            nextProductId: prevState.nextProductId + 1,\n            product: [...product, newItem]\n          }\n        })\n      }else this.pleaseAddAllOptions(true)\n\n    }else this.notAvailableItem(true)\n\n  }\n  //reset all attributes\n  restAttributes() {\n    this.setState({pickedColor: {id: \"\", color: \"\"}})\n    this.setState({pickedSize: {id: \"\", size: \"\"}})\n    this.setState({pickedCapacity: {id: \"\", capacity: \"\"}})\n    this.setState({pickedWithUsb: {id: \"\", usb: \"\"}})\n    this.setState({pickedWithTouchID: {id: \"\", touchID: \"\"}})\n  }\n  //Delete Item array\n  onDelete(index) {\n    const { product } = this.state;\n    var array = product.slice();\n      array.splice(index, 1);\n      this.setState({product: array})  \n\n  }\n  //Set picked Item Color\n  //@param attr string, i int\n  handleAttributColor(attr , i) {\n    this.setState({pickedColor: { id: i , color: attr}})\n  }\n  //Set picked Item Size\n  //@param attr string, i int\n  handleAttributSize(attr, i) {\n    this.setState({pickedSize: {id: i, size: attr}})\n  }\n  //Set picked Item Capacity\n  //@param attr string, i int\n  handleAttributCapacity(attr, i) {\n    this.setState({pickedCapacity: {id: i, capacity: attr}})\n  }\n  //Set picked Item usb\n  //@param attr string, i int\n  handleAttributWithUSB(attr, i) {\n      this.setState({pickedWithUsb: {id: i, usb: attr}})\n    }\n\n  //Set picked Item with touch id\n  //@param attr string, i int\n  handleAttributWithTouchID(attr, i) {\n    this.setState({pickedWithTouchID: {id: i, withTouchID: attr}})\n  }\n  setTotal(i) {\n    this.setState({total: i})\n  }\n\n  render() {\n\n    const { product,\n            currentCurrency,\n            openClose,\n            productCategory,\n            productDetail,\n            notAvailable,\n            pickedColor,\n            pickedCapacity,\n            pickedSize,\n            pickedWithTouchID,\n            pickedWithUsb,\n            total,\n            openCloseCurrency,\n            openCloseModal\n          } = this.state;\n    \n    return (\n      <div className=\"App\"> \n              <Router className=\"router\">\n              {openCloseModal === true ? \n              <Modal openCloseModal = {openCloseModal} \n                     handleOpenCloseModal={this.handleOpenCloseModal} \n                     productDetails = {productDetail}\n                     handleAttributColor = {this.handleAttributColor}\n                     handleAttributSize = {this.handleAttributSize}\n                     handleAttributCapacity = {this.handleAttributCapacity}\n                     handleAttributWithTouchID = {this.handleAttributWithTouchID}\n                     handleAttributWithUSB = {this.handleAttributWithUSB}\n                     notAvailable = {notAvailable}\n                     pickedColor = {pickedColor}\n                     pickedCapacity = {pickedCapacity}\n                     pickedSize = {pickedSize}\n                     pickedWithTouchID = {pickedWithTouchID}\n                     pickedWithUsb = {pickedWithUsb}\n                     selectedProduct = {this.addToCart}\n                     \n              /> : \"\" }\n              <Header\n                handleCurrencyCon = {this.handleCurrencyCon}\n                openCloseCurrency = {openCloseCurrency}\n                onChangeCurrency = {this.changeCurrency}\n                setLink = {this.setLink}\n                openClose = {this.openCloseCard}\n                productCount = {product.length}\n                currency = {currentCurrency}\n                />\n              {openClose === true ? <CardOverlay\n                closeCard = {this.closeCard}\n                toCart = {product}\n                currency = {currentCurrency}\n                total = {total}\n                setTotal = {this.setTotal}\n                onDelete = {this.onDelete}\n                  /> : ''}\n                <Routes>\n                  <Route path=\"/\" exact={true}\n                   element= {<Home />}\n                  />\n\n                <Route path={productCategory}\n                  element= {<Content cat = {productCategory} \n                  productDetail ={this.productDetails}\n                  currency = {currentCurrency} \n                  openCloseModal = {openCloseModal}\n                  handleOpenCloseModal= {this.handleOpenCloseModal}/>} \n                    />\n\n                <Route path={productCategory + \"/\" + productDetail.id}  \n                  element= {<PDP\n                  productDetails = {productDetail}\n                  selectedProduct = {this.addToCart}\n                  currency = {currentCurrency}\n                  handleAttributColor = {this.handleAttributColor}\n                  handleAttributSize = {this.handleAttributSize}\n                  handleAttributCapacity = {this.handleAttributCapacity}\n                  handleAttributWithTouchID = {this.handleAttributWithTouchID}\n                  handleAttributWithUSB = {this.handleAttributWithUSB}\n                  notAvailable = {notAvailable}\n                  pickedColor = {pickedColor}\n                  pickedCapacity = {pickedCapacity}\n                  pickedSize = {pickedSize}\n                  pickedWithTouchID = {pickedWithTouchID}\n                  pickedWithUsb = {pickedWithUsb}\n                  \n                  />} \n                  />\n\n                <Route path=\"cart\"\n                  element= {<Cart \n                  selectedProduct = {product}\n                  currency = {currentCurrency}\n                  />} \n                  />\n                </Routes>\n            </Router>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
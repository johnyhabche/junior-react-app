{"ast":null,"code":"import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n});\nconst Fetch_CURRENCY_QUERY = client.query({\n  query: gql`\n    {\n       currencies {\n          label\n           symbol\n          }\n        }\n    `\n});\n\nconst Fetch_CATEGORIES_QUERY = cat => {\n  return client.query({\n    query: gql`\n      {\n        category(input: { title: \"${cat}\"}) {\n          name\n          products {\n            id\n            name\n            inStock\n            brand\n            description\n            gallery\n            category\n            attributes {\n              name\n              items {\n                displayValue\n              }\n            }\n            prices {\n              amount\n              currency {\n                label\n                symbol\n              }\n            }\n          }\n      \n        }\n      }\n      `\n  });\n};\n\n_c = Fetch_CATEGORIES_QUERY;\nconst Fetch_CATEGORIES_LINKS_QUERY = client.query({\n  query: gql`\n    {\n      categories {\n      name\n    }\n  }\n    `\n});\n\nconst Fetch_PRODUCT_QUERY = id => {\n  return client.query({\n    query: gql`\n        {\n          product(id:\"${id}\") {\n            id\n            name\n            category\n        }\n        }\n        `\n  });\n};\n\n_c2 = Fetch_PRODUCT_QUERY;\nexport { Fetch_CURRENCY_QUERY, Fetch_CATEGORIES_QUERY, Fetch_CATEGORIES_LINKS_QUERY, Fetch_PRODUCT_QUERY };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Fetch_CATEGORIES_QUERY\");\n$RefreshReg$(_c2, \"Fetch_PRODUCT_QUERY\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/queries/Queries.js"],"names":["ApolloClient","InMemoryCache","gql","client","uri","cache","Fetch_CURRENCY_QUERY","query","Fetch_CATEGORIES_QUERY","cat","Fetch_CATEGORIES_LINKS_QUERY","Fetch_PRODUCT_QUERY","id"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC5BI,EAAAA,GAAG,EAAC,+BADwB;AAE5BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFqB,CAAjB,CAAf;AAMA,MAAMK,oBAAoB,GAAGH,MAAM,CAACI,KAAP,CAAa;AACtCA,EAAAA,KAAK,EAAEL,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AAR0C,CAAb,CAA7B;;AAYA,MAAMM,sBAAsB,GAAKC,GAAD,IAAS;AACvC,SACEN,MAAM,CAACI,KAAP,CAAa;AACXA,IAAAA,KAAK,EAAEL,GAAI;AACjB;AACA,oCAAoCO,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BiB,GAAb,CADF;AAkCD,CAnCD;;KAAMD,sB;AAoCN,MAAME,4BAA4B,GAAIP,MAAM,CAACI,KAAP,CAAa;AAC/CA,EAAAA,KAAK,EAAEL,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AAPmD,CAAb,CAAtC;;AAUE,MAAMS,mBAAmB,GAAKC,EAAD,IAAQ;AACnC,SACET,MAAM,CAACI,KAAP,CAAa;AACXA,IAAAA,KAAK,EAAEL,GAAI;AACnB;AACA,wBAAwBU,EAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AATmB,GAAb,CADF;AAaD,CAdD;;MAAMD,mB;AAiBR,SAASL,oBAAT,EAA+BE,sBAA/B,EAAuDE,4BAAvD,EAAqFC,mBAArF","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { gql } from '@apollo/client';  \r\n\r\nconst client = new ApolloClient({\r\n    uri:'http://localhost:4000/graphql',\r\n    cache: new InMemoryCache()\r\n  })\r\n  \r\n  \r\nconst Fetch_CURRENCY_QUERY = client.query({\r\n    query: gql`\r\n    {\r\n       currencies {\r\n          label\r\n           symbol\r\n          }\r\n        }\r\n    `\r\n})\r\n\r\n\r\nconst Fetch_CATEGORIES_QUERY  = (cat) => {\r\n  return (\r\n    client.query({\r\n      query: gql`\r\n      {\r\n        category(input: { title: \"${cat}\"}) {\r\n          name\r\n          products {\r\n            id\r\n            name\r\n            inStock\r\n            brand\r\n            description\r\n            gallery\r\n            category\r\n            attributes {\r\n              name\r\n              items {\r\n                displayValue\r\n              }\r\n            }\r\n            prices {\r\n              amount\r\n              currency {\r\n                label\r\n                symbol\r\n              }\r\n            }\r\n          }\r\n      \r\n        }\r\n      }\r\n      `\r\n    })\r\n)\r\n}\r\nconst Fetch_CATEGORIES_LINKS_QUERY  = client.query({\r\n    query: gql`\r\n    {\r\n      categories {\r\n      name\r\n    }\r\n  }\r\n    `\r\n  })\r\n\r\n  const Fetch_PRODUCT_QUERY  = (id) => {\r\n    return (\r\n      client.query({\r\n        query: gql`\r\n        {\r\n          product(id:\"${id}\") {\r\n            id\r\n            name\r\n            category\r\n        }\r\n        }\r\n        `\r\n      })\r\n  )\r\n  }\r\n\r\n      \r\nexport { Fetch_CURRENCY_QUERY, Fetch_CATEGORIES_QUERY, Fetch_CATEGORIES_LINKS_QUERY, Fetch_PRODUCT_QUERY};"]},"metadata":{},"sourceType":"module"}
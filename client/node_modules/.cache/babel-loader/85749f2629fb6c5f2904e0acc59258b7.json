{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\component\\\\product-modal\\\\Modal.js\";\nimport React, { Component } from \"react\";\nimport './styles/Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Modal extends Component {\n  renderAttributes() {\n    const {\n      productDetails,\n      handleAttributCapacity,\n      handleAttributColor,\n      handleAttributSize,\n      handleAttributWithUSB,\n      pickedColor,\n      pickedCapacity,\n      pickedSize,\n      pickedWithUsb,\n      handleAttributWithTouchID,\n      pickedWithTouchID\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      children: productDetails.attributes.map((attr, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributes\",\n        children: attr.items.map((items, i) => attr.name === \"Color\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attr-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleAttributColor(items.displayValue, i),\n            className: `${items.displayValue} attributess`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), pickedColor.id === i && pickedColor.color === items.displayValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"picked-attr\",\n            children: items.displayValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 82\n          }, this) : \"\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this) : attr.name === \"Size\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attr-container\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleAttributSize(items.displayValue, i),\n            className: `atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`,\n            children: !isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this) : attr.name === \"Capacity\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attr-container\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleAttributCapacity(items.displayValue, i),\n            className: `atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`,\n            children: items.displayValue\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this) : attr.name === \"With USB 3 ports\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attr-container\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleAttributWithUSB(items.displayValue, i),\n            className: `atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`,\n            children: items.displayValue\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : attr.name === \"Touch ID in keyboard\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attr-container\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleAttributWithTouchID(items.displayValue, i),\n            className: `atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`,\n            children: items.displayValue\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      productDetails,\n      handleOpenCloseModal,\n      openCloseModal\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => handleOpenCloseModal(openCloseModal)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-con\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: productDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), this.renderAttributes(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add To Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/component/product-modal/Modal.js"],"names":["React","Component","Modal","renderAttributes","productDetails","handleAttributCapacity","handleAttributColor","handleAttributSize","handleAttributWithUSB","pickedColor","pickedCapacity","pickedSize","pickedWithUsb","handleAttributWithTouchID","pickedWithTouchID","props","attributes","map","attr","i","items","name","displayValue","id","color","size","isNaN","charAt","capacity","usb","withTouchID","render","handleOpenCloseModal","openCloseModal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAE1BE,EAAAA,gBAAgB,GAAG;AACf,UAAM;AAAEC,MAAAA,cAAF;AACFC,MAAAA,sBADE;AAEFC,MAAAA,mBAFE;AAGFC,MAAAA,kBAHE;AAIFC,MAAAA,qBAJE;AAKFC,MAAAA,WALE;AAMFC,MAAAA,cANE;AAOFC,MAAAA,UAPE;AAQFC,MAAAA,aARE;AASFC,MAAAA,yBATE;AAUFC,MAAAA;AAVE,QAUoB,KAAKC,KAV/B;AAWA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACCX,cAAc,CAACY,UAAf,CAA0BC,GAA1B,CAA8B,CAACC,IAAD,EAAMC,CAAN,kBAC/B;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKD,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAe,CAACG,KAAD,EAAQD,CAAR,KAEpBD,IAAI,CAACG,IAAL,KAAc,OAAd,gBAEA;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAY,YAAA,OAAO,EAAG,MAAMf,mBAAmB,CAACc,KAAK,CAACE,YAAP,EAAqBH,CAArB,CAA/C;AAAwE,YAAA,SAAS,EAAG,GAAEC,KAAK,CAACE,YAAa;AAAzG,aAASH,CAAT;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGV,WAAW,CAACc,EAAZ,KAAmBJ,CAAnB,IAAwBV,WAAW,CAACe,KAAZ,KAAsBJ,KAAK,CAACE,YAApD,gBAAkE;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA,sBAA4BF,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAlE,GAAwH,EAJ3H;AAAA,WAAqCH,CAArC;AAAA;AAAA;AAAA;AAAA,gBAFA,GASAD,IAAI,CAACG,IAAL,KAAc,MAAd,gBACA;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE;AAAY,YAAA,OAAO,EAAG,MAAMd,kBAAkB,CAACa,KAAK,CAACE,YAAP,EAAqBH,CAArB,CAA9C;AAAuE,YAAA,SAAS,EAAG,aAAYR,UAAU,CAACY,EAAX,KAAkBJ,CAAlB,IAAuBR,UAAU,CAACc,IAAX,KAAoBL,KAAK,CAACE,YAAjD,GAAgE,UAAhE,GAA6E,EAAG,EAA/K;AAAA,sBACC,CAACI,KAAK,CAACN,KAAK,CAACE,YAAP,CAAN,GAA6BF,KAAK,CAACE,YAAnC,GAAkDF,KAAK,CAACE,YAAN,CAAmBK,MAAnB,CAA0B,CAA1B;AADnD,aAASR,CAAT;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCA,CAArC;AAAA;AAAA;AAAA;AAAA,gBADA,GAOAD,IAAI,CAACG,IAAL,KAAc,UAAd,gBACA;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE;AAAa,YAAA,OAAO,EAAG,MAAMhB,sBAAsB,CAACe,KAAK,CAACE,YAAP,EAAqBH,CAArB,CAAnD;AAA4E,YAAA,SAAS,EAAG,aAAYT,cAAc,CAACa,EAAf,KAAsBJ,CAAtB,IAA2BT,cAAc,CAACkB,QAAf,KAA4BR,KAAK,CAACE,YAA7D,GAA4E,UAA5E,GAAyF,EAAG,EAAhM;AAAA,sBACCF,KAAK,CAACE;AADP,aAASH,CAAT;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCA,CAArC;AAAA;AAAA;AAAA;AAAA,gBADA,GAOAD,IAAI,CAACG,IAAL,KAAc,kBAAd,gBACA;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE;AAAY,YAAA,OAAO,EAAG,MAAMb,qBAAqB,CAACY,KAAK,CAACE,YAAP,EAAqBH,CAArB,CAAjD;AAA2E,YAAA,SAAS,EAAG,aAAYP,aAAa,CAACW,EAAd,KAAqBJ,CAArB,IAA0BP,aAAa,CAACiB,GAAd,KAAsBT,KAAK,CAACE,YAAtD,GAAqE,UAArE,GAAkF,EAAG,EAAxL;AAAA,sBACCF,KAAK,CAACE;AADP,aAASH,CAAT;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCA,CAArC;AAAA;AAAA;AAAA;AAAA,gBADA,GAOAD,IAAI,CAACG,IAAL,KAAc,sBAAd,gBACA;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE;AAAY,YAAA,OAAO,EAAG,MAAMR,yBAAyB,CAACO,KAAK,CAACE,YAAP,EAAqBH,CAArB,CAArD;AAA8E,YAAA,SAAS,EAAG,aAAYL,iBAAiB,CAACS,EAAlB,KAAyBJ,CAAzB,IAA8BL,iBAAiB,CAACgB,WAAlB,KAAkCV,KAAK,CAACE,YAAtE,GAAqF,UAArF,GAAkG,EAAG,EAA3M;AAAA,sBACCF,KAAK,CAACE;AADP,aAASH,CAAT;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCA,CAArC;AAAA;AAAA;AAAA;AAAA,gBADA,GAME,EAtCG;AADL;AAAA;AAAA;AAAA;AAAA,cADC;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAiDH;;AACDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAE3B,MAAAA,cAAF;AACE4B,MAAAA,oBADF;AAEEC,MAAAA;AAFF,QAGG,KAAKlB,KAHd;AAIA,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,OAAO,EAAE,MAAMiB,oBAAoB,CAACC,cAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAA,sBAAK7B,cAAc,CAACiB;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIK,KAAKlB,gBAAL,EAJL,eAKI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AArFyB;;AAwF9B,eAAeD,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport './styles/Modal.css';\r\n\r\nclass Modal extends Component {\r\n\r\n    renderAttributes() {\r\n        const { productDetails,\r\n            handleAttributCapacity,\r\n            handleAttributColor,\r\n            handleAttributSize,\r\n            handleAttributWithUSB,\r\n            pickedColor,\r\n            pickedCapacity,\r\n            pickedSize,\r\n            pickedWithUsb,\r\n            handleAttributWithTouchID,\r\n            pickedWithTouchID } = this.props;\r\n        return (\r\n            <div className=\"modal-body\">\r\n            {productDetails.attributes.map((attr,i) => (\r\n            <div className=\"attributes\">\r\n                {attr.items.map((items, i) => (\r\n            \r\n            attr.name === \"Color\" ?\r\n  \r\n            <div className='attr-container' key={i}>\r\n              <li key={i} onClick={ () => handleAttributColor(items.displayValue, i)} className={`${items.displayValue} attributess`} >\r\n\r\n              </li>\r\n              {pickedColor.id === i && pickedColor.color === items.displayValue ?<p className='picked-attr'>{items.displayValue}</p> : \"\"}\r\n            </div>\r\n            : \r\n            attr.name === \"Size\" ? \r\n            <div className='attr-container' key={i}>\r\n              <li key={i} onClick={ () => handleAttributSize(items.displayValue, i)} className={`atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n              {!isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)}\r\n              </li>\r\n            </div> \r\n            : \r\n            attr.name === \"Capacity\" ? \r\n            <div className='attr-container' key={i}> \r\n              <li key={i}  onClick={ () => handleAttributCapacity(items.displayValue, i)} className={`atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n              {items.displayValue}\r\n              </li>\r\n            </div>\r\n            :\r\n            attr.name === \"With USB 3 ports\" ? \r\n            <div className='attr-container' key={i}>\r\n              <li key={i} onClick={ () => handleAttributWithUSB(items.displayValue, i) } className={`atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n              {items.displayValue}\r\n              </li>\r\n            </div>\r\n            : \r\n            attr.name === \"Touch ID in keyboard\" ? \r\n            <div className='attr-container' key={i}>\r\n              <li key={i} onClick={ () => handleAttributWithTouchID(items.displayValue, i)} className={`atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n              {items.displayValue}\r\n              </li>\r\n            </div>\r\n            : \"\"\r\n\r\n          ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n        )\r\n    }\r\n    render() {\r\n        const { productDetails,\r\n                handleOpenCloseModal,\r\n                openCloseModal\r\n             } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"modal-overlay\" onClick={() => handleOpenCloseModal(openCloseModal)}>\r\n\r\n                </div>\r\n                <div className=\"modal-con\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>{productDetails.name}</h3>\r\n                    </div>\r\n                    {this.renderAttributes()}\r\n                    <div className=\"modal-footer\">\r\n                        <button>Add To Cart</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}
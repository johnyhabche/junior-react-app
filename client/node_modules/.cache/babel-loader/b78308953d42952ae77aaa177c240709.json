{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\component\\\\product-modal\\\\Modal.js\";\nimport React, { Component } from \"react\";\nimport './styles/Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Modal extends Component {\n  render() {\n    const {\n      productDetails,\n      handleOpenCloseModal,\n      openCloseModal\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(productDetails), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => handleOpenCloseModal(openCloseModal)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-con\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: productDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [\"productDetails.attributes.map((attr, index) => (\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: attr.name + \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attributes-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"attributes-list\",\n                children: attr.items.map((items, i) => attr.name === \"Color\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attr-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleAttributColor(items.displayValue, i),\n                    className: `${items.displayValue} attributess`\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 30,\n                    columnNumber: 27\n                  }, this), pickedColor.id === i && pickedColor.color === items.displayValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"picked-attr\",\n                    children: items.displayValue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 94\n                  }, this) : \"\"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 25\n                }, this) : attr.name === \"Size\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attr-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleAttributSize(items.displayValue, i),\n                    className: `atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`,\n                    children: !isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 27\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 25\n                }, this) : attr.name === \"Capacity\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attr-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleAttributCapacity(items.displayValue, i),\n                    className: `atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`,\n                    children: items.displayValue\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 27\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 25\n                }, this) : attr.name === \"With USB 3 ports\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attr-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleAttributWithUSB(items.displayValue, i),\n                    className: `atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`,\n                    children: items.displayValue\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 27\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this) : attr.name === \"Touch ID in keyboard\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attr-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleAttributWithTouchID(items.displayValue, i),\n                    className: `atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`,\n                    children: items.displayValue\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 27\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this) : \"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), \"))\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/component/product-modal/Modal.js"],"names":["React","Component","Modal","render","productDetails","handleOpenCloseModal","openCloseModal","props","console","log","name","attr","items","map","i","handleAttributColor","displayValue","pickedColor","id","color","handleAttributSize","pickedSize","size","isNaN","charAt","handleAttributCapacity","pickedCapacity","capacity","handleAttributWithUSB","pickedWithUsb","usb","handleAttributWithTouchID","pickedWithTouchID","withTouchID","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport './styles/Modal.css';\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        const { productDetails, handleOpenCloseModal, openCloseModal } = this.props;\r\n        return (\r\n            <div>\r\n                {console.log(productDetails)}\r\n                <div className=\"modal-overlay\" onClick={() => handleOpenCloseModal(openCloseModal)}>\r\n\r\n                </div>\r\n                <div className=\"modal-con\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>{productDetails.name}</h3>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                    productDetails.attributes.map((attr, index) => (\r\n              <div key={index}>\r\n              <h6>{attr.name + \":\"}</h6>\r\n              <div className='attributes-container'>\r\n                  \r\n                  <div  className='attributes-list'>\r\n                    {attr.items.map((items, i) => (\r\n                        \r\n                        attr.name === \"Color\" ?\r\n              \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributColor(items.displayValue, i)} className={`${items.displayValue} attributess`} >\r\n\r\n                          </li>\r\n                          {pickedColor.id === i && pickedColor.color === items.displayValue ?<p className='picked-attr'>{items.displayValue}</p> : \"\"}\r\n                        </div>\r\n                        : \r\n                        attr.name === \"Size\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributSize(items.displayValue, i)} className={`atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n                          {!isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)}\r\n                          </li>\r\n                        </div> \r\n                        : \r\n                        attr.name === \"Capacity\" ? \r\n                        <div className='attr-container' key={i}> \r\n                          <li key={i}  onClick={ () => handleAttributCapacity(items.displayValue, i)} className={`atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        :\r\n                        attr.name === \"With USB 3 ports\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributWithUSB(items.displayValue, i) } className={`atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        : \r\n                        attr.name === \"Touch ID in keyboard\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributWithTouchID(items.displayValue, i)} className={`atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        : \"\"\r\n\r\n                      ))}\r\n                    </div>\r\n              </div>\r\n            </div>\r\n              \r\n          ))\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <h1></h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}
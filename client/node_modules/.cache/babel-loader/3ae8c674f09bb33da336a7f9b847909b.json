{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\component\\\\product-modal\\\\Modal.js\";\nimport React, { Component } from \"react\";\nimport './styles/Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Modal extends Component {\n  renderAttributes() {}\n\n  render() {\n    const {\n      productDetails,\n      handleOpenCloseModal,\n      openCloseModal,\n      handleAttributCapacity,\n      handleAttributColor,\n      handleAttributSize,\n      handleAttributWithUSB,\n      pickedColor,\n      pickedCapacity,\n      pickedSize,\n      pickedWithUsb,\n      handleAttributWithTouchID,\n      pickedWithTouchID\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(productDetails), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => handleOpenCloseModal(openCloseModal)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-con\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: productDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: productDetails.attributes.map((attr, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attributes\",\n            children: attr.items.map((items, i) => attr.name === \"Color\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attr-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleAttributColor(items.displayValue, i),\n                className: `${items.displayValue} attributess`\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 27\n              }, this), pickedColor.id === i && pickedColor.color === items.displayValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"picked-attr\",\n                children: items.displayValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 94\n              }, this) : \"\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this) : attr.name === \"Size\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attr-container\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleAttributSize(items.displayValue, i),\n                className: `atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`,\n                children: !isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 27\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this) : attr.name === \"Capacity\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attr-container\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleAttributCapacity(items.displayValue, i),\n                className: `atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`,\n                children: items.displayValue\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 27\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this) : attr.name === \"With USB 3 ports\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attr-container\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleAttributWithUSB(items.displayValue, i),\n                className: `atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`,\n                children: items.displayValue\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 27\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this) : attr.name === \"Touch ID in keyboard\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attr-container\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleAttributWithTouchID(items.displayValue, i),\n                className: `atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`,\n                children: items.displayValue\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 27\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this) : \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add To Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/component/product-modal/Modal.js"],"names":["React","Component","Modal","renderAttributes","render","productDetails","handleOpenCloseModal","openCloseModal","handleAttributCapacity","handleAttributColor","handleAttributSize","handleAttributWithUSB","pickedColor","pickedCapacity","pickedSize","pickedWithUsb","handleAttributWithTouchID","pickedWithTouchID","props","console","log","name","attributes","map","attr","i","items","displayValue","id","color","size","isNaN","charAt","capacity","usb","withTouchID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport './styles/Modal.css';\r\n\r\nclass Modal extends Component {\r\n\r\n    renderAttributes() {\r\n        \r\n    }\r\n    render() {\r\n        const { productDetails,\r\n                handleOpenCloseModal,\r\n                openCloseModal,\r\n                handleAttributCapacity,\r\n                handleAttributColor,\r\n                handleAttributSize,\r\n                handleAttributWithUSB,\r\n                pickedColor,\r\n                pickedCapacity,\r\n                pickedSize,\r\n                pickedWithUsb,\r\n                handleAttributWithTouchID,\r\n                pickedWithTouchID } = this.props;\r\n        return (\r\n            <div>\r\n                {console.log(productDetails)}\r\n                <div className=\"modal-overlay\" onClick={() => handleOpenCloseModal(openCloseModal)}>\r\n\r\n                </div>\r\n                <div className=\"modal-con\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>{productDetails.name}</h3>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {productDetails.attributes.map((attr,i) => (\r\n                        <div className=\"attributes\">\r\n                            {attr.items.map((items, i) => (\r\n                        \r\n                        attr.name === \"Color\" ?\r\n              \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributColor(items.displayValue, i)} className={`${items.displayValue} attributess`} >\r\n\r\n                          </li>\r\n                          {pickedColor.id === i && pickedColor.color === items.displayValue ?<p className='picked-attr'>{items.displayValue}</p> : \"\"}\r\n                        </div>\r\n                        : \r\n                        attr.name === \"Size\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributSize(items.displayValue, i)} className={`atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n                          {!isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)}\r\n                          </li>\r\n                        </div> \r\n                        : \r\n                        attr.name === \"Capacity\" ? \r\n                        <div className='attr-container' key={i}> \r\n                          <li key={i}  onClick={ () => handleAttributCapacity(items.displayValue, i)} className={`atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        :\r\n                        attr.name === \"With USB 3 ports\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributWithUSB(items.displayValue, i) } className={`atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        : \r\n                        attr.name === \"Touch ID in keyboard\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributWithTouchID(items.displayValue, i)} className={`atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        : \"\"\r\n\r\n                      ))}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button>Add To Cart</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}
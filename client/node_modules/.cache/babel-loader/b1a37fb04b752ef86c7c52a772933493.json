{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\App.js\";\nimport { React, PureComponent } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Content from \"./component/content/Content\";\nimport Header from \"./component/header/Header\";\nimport Home from \"./component/home/Home\";\nimport PDP from \"./component/pdp/PDP\";\nimport CardOverlay from \"./component/card-overlay/CardOverlay\";\nimport Cart from './component/cart/Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n      pickedColor: [{\n        id: \"\",\n        color: \"\"\n      }],\n      pickedCapacity: [{\n        id: \"\",\n        capacity: \"\"\n      }],\n      pickedSize: [{\n        id: \"\",\n        size: \"\"\n      }],\n      pickedWithUsb: [{\n        id: \"\",\n        usb: \"\"\n      }],\n      pickedWithTouchID: [{\n        id: \"\",\n        touchID: \"\"\n      }],\n      currentCurrency: \"$\",\n      productCategory: \"all\",\n      productDetail: [],\n      openClose: false,\n      notAvailable: false,\n      total: [0],\n      qty: '',\n      product: [],\n      nextProductId: 0\n    };\n    this.changeCurrency = this.changeCurrency.bind(this);\n    this.setLink = this.setLink.bind(this);\n    this.productDetails = this.productDetails.bind(this);\n    this.openCloseCard = this.openCloseCard.bind(this);\n    this.closeCard = this.closeCard.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.handleAttributColor = this.handleAttributColor.bind(this);\n    this.handleAttributSize = this.handleAttributSize.bind(this);\n    this.handleAttributCapacity = this.handleAttributCapacity.bind(this);\n    this.handleAttributWithUSB = this.handleAttributWithUSB.bind(this);\n    this.handleAttributWithTouchID = this.handleAttributWithTouchID.bind(this);\n  }\n\n  changeCurrency(curr) {\n    this.setState({\n      currentCurrency: curr\n    });\n  }\n\n  setLink(link) {\n    this.notAvailableItem(false);\n    this.restAttributes();\n    this.setState({\n      productCategory: link\n    });\n  }\n\n  productDetails(details) {\n    this.setState({\n      productDetail: details\n    });\n  }\n\n  openCloseCard(bool) {\n    this.setState({\n      openClose: !bool\n    });\n  }\n\n  closeCard(close) {\n    this.setState({\n      openClose: close\n    });\n  }\n\n  notAvailableItem(bool) {\n    this.setState({\n      notAvailable: bool\n    });\n  } //Add customer product to card\n  //param picked item object\n\n\n  addToCart(item) {\n    const {\n      nextProductId,\n      pickedColor,\n      pickedSize,\n      pickedCapacity,\n      product,\n      pickedWithUsb,\n      pickedWithTouchID\n    } = this.state;\n    this.restAttributes();\n\n    if (item.inStock === true) {\n      this.setState(prevState => {\n        const newItem = { ...item,\n          itemId: nextProductId,\n          qty: 1,\n          color: pickedColor.color,\n          size: pickedSize.size,\n          capacity: pickedCapacity.capacity,\n          usb: pickedWithUsb.usb,\n          touchID: pickedWithTouchID.touchID\n        };\n        return {\n          nextProductId: prevState.nextProductId + 1,\n          product: [...product, newItem]\n        };\n      });\n    } else this.notAvailableItem(true);\n  } //reset all attributes\n\n\n  restAttributes() {\n    this.setState({\n      pickedColor: {\n        id: \"\",\n        color: \"\"\n      }\n    });\n    this.setState({\n      pickedSize: {\n        id: \"\",\n        size: \"\"\n      }\n    });\n    this.setState({\n      pickedCapacity: {\n        id: \"\",\n        capacity: \"\"\n      }\n    });\n    this.setState({\n      pickedWithUsb: {\n        id: \"\",\n        usb: \"\"\n      }\n    });\n    this.setState({\n      pickedWithTouchID: {\n        id: \"\",\n        touchID: \"\"\n      }\n    });\n  } //Delete Item array\n\n\n  onDelete(index) {\n    const {\n      product\n    } = this.state;\n    var array = product.slice();\n    array.splice(index, 1);\n    this.setState({\n      product: array\n    });\n  } //Set picked Item Color\n  //@param attr string, i int\n\n\n  handleAttributColor(attr, i) {\n    this.setState({\n      pickedColor: {\n        id: i,\n        color: attr\n      }\n    });\n  } //Set picked Item Size\n  //@param attr string, i int\n\n\n  handleAttributSize(attr, i) {\n    this.setState({\n      pickedSize: {\n        id: i,\n        size: attr\n      }\n    });\n  } //Set picked Item Capacity\n  //@param attr string, i int\n\n\n  handleAttributCapacity(attr, i) {\n    this.setState({\n      pickedCapacity: {\n        id: i,\n        capacity: attr\n      }\n    });\n  } //Set picked Item usb\n  //@param attr string, i int\n\n\n  handleAttributWithUSB(attr, i) {\n    this.setState({\n      pickedWithUsb: {\n        id: i,\n        usb: attr\n      }\n    });\n  } //Set picked Item with touch id\n  //@param attr string, i int\n\n\n  handleAttributWithTouchID(attr, i) {\n    this.setState({\n      pickedWithTouchID: {\n        id: i,\n        withTouchID: attr\n      }\n    });\n  }\n\n  render() {\n    const {\n      product,\n      currentCurrency,\n      openClose,\n      productCategory,\n      productDetail,\n      notAvailable,\n      pickedColor,\n      pickedCapacity,\n      pickedSize,\n      pickedWithTouchID,\n      pickedWithUsb,\n      total\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        className: \"router\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onChangeCurrency: this.changeCurrency,\n          setLink: this.setLink,\n          openClose: this.openCloseCard,\n          productCount: product.length,\n          currency: currentCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), openClose === true ? /*#__PURE__*/_jsxDEV(CardOverlay, {\n          closeCard: this.closeCard,\n          toCart: product,\n          currency: currentCurrency,\n          total: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }, this) : '', /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: productCategory,\n            element: /*#__PURE__*/_jsxDEV(Content, {\n              cat: productCategory,\n              productDetail: this.productDetails,\n              currency: currentCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: productCategory + \"/\" + productDetail.id,\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              productDetails: productDetail,\n              selectedProduct: this.addToCart,\n              currency: currentCurrency,\n              handleAttributColor: this.handleAttributColor,\n              handleAttributSize: this.handleAttributSize,\n              handleAttributCapacity: this.handleAttributCapacity,\n              handleAttributWithTouchID: this.handleAttributWithTouchID,\n              handleAttributWithUSB: this.handleAttributWithUSB,\n              notAvailable: notAvailable,\n              pickedColor: pickedColor,\n              pickedCapacity: pickedCapacity,\n              pickedSize: pickedSize,\n              pickedWithTouchID: pickedWithTouchID,\n              pickedWithUsb: pickedWithUsb\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              selectedProduct: product,\n              currency: currentCurrency,\n              onDelete: this.onDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/App.js"],"names":["React","PureComponent","BrowserRouter","Router","Routes","Route","Content","Header","Home","PDP","CardOverlay","Cart","App","constructor","props","state","active","pickedColor","id","color","pickedCapacity","capacity","pickedSize","size","pickedWithUsb","usb","pickedWithTouchID","touchID","currentCurrency","productCategory","productDetail","openClose","notAvailable","total","qty","product","nextProductId","changeCurrency","bind","setLink","productDetails","openCloseCard","closeCard","addToCart","onDelete","handleAttributColor","handleAttributSize","handleAttributCapacity","handleAttributWithUSB","handleAttributWithTouchID","curr","setState","link","notAvailableItem","restAttributes","details","bool","close","item","inStock","prevState","newItem","itemId","index","array","slice","splice","attr","i","withTouchID","render","length"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,MAAMC,GAAN,SAAkBX,aAAlB,CAAgC;AAC9BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,WAAW,EAAE,CAAC;AAACC,QAAAA,EAAE,EAAE,EAAL;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAD,CAFF;AAGXC,MAAAA,cAAc,EAAE,CAAC;AAACF,QAAAA,EAAE,EAAE,EAAL;AAASG,QAAAA,QAAQ,EAAE;AAAnB,OAAD,CAHL;AAIXC,MAAAA,UAAU,EAAE,CAAC;AAACJ,QAAAA,EAAE,EAAE,EAAL;AAASK,QAAAA,IAAI,EAAE;AAAf,OAAD,CAJD;AAKXC,MAAAA,aAAa,EAAE,CAAC;AAACN,QAAAA,EAAE,EAAE,EAAL;AAASO,QAAAA,GAAG,EAAE;AAAd,OAAD,CALJ;AAMXC,MAAAA,iBAAiB,EAAE,CAAC;AAACR,QAAAA,EAAE,EAAE,EAAL;AAASS,QAAAA,OAAO,EAAE;AAAlB,OAAD,CANR;AAOXC,MAAAA,eAAe,EAAE,GAPN;AAQXC,MAAAA,eAAe,EAAE,KARN;AASXC,MAAAA,aAAa,EAAE,EATJ;AAUXC,MAAAA,SAAS,EAAE,KAVA;AAWXC,MAAAA,YAAY,EAAE,KAXH;AAYXC,MAAAA,KAAK,EAAC,CAAC,CAAD,CAZK;AAaXC,MAAAA,GAAG,EAAE,EAbM;AAcXC,MAAAA,OAAO,EAAE,EAdE;AAiBXC,MAAAA,aAAa,EAAE;AAjBJ,KAAb;AAoBA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeJ,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKK,SAAL,GAAiB,KAAKA,SAAL,CAAeL,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKM,QAAL,GAAgB,KAAKA,QAAL,CAAcN,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKO,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBP,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKQ,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBR,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKS,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BT,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKU,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BV,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKW,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BX,IAA/B,CAAoC,IAApC,CAAjC;AACD;;AAEDD,EAAAA,cAAc,CAACa,IAAD,EAAO;AACnB,SAAKC,QAAL,CAAc;AAACvB,MAAAA,eAAe,EAAEsB;AAAlB,KAAd;AACD;;AAEDX,EAAAA,OAAO,CAACa,IAAD,EAAO;AACZ,SAAKC,gBAAL,CAAsB,KAAtB;AACA,SAAKC,cAAL;AACA,SAAKH,QAAL,CAAc;AAACtB,MAAAA,eAAe,EAAEuB;AAAlB,KAAd;AACD;;AAEDZ,EAAAA,cAAc,CAACe,OAAD,EAAU;AACtB,SAAKJ,QAAL,CAAc;AAACrB,MAAAA,aAAa,EAAEyB;AAAhB,KAAd;AACD;;AAEDd,EAAAA,aAAa,CAACe,IAAD,EAAO;AAClB,SAAKL,QAAL,CAAc;AAACpB,MAAAA,SAAS,EAAE,CAACyB;AAAb,KAAd;AACD;;AACDd,EAAAA,SAAS,CAACe,KAAD,EAAQ;AACf,SAAKN,QAAL,CAAc;AAACpB,MAAAA,SAAS,EAAE0B;AAAZ,KAAd;AACD;;AACDJ,EAAAA,gBAAgB,CAACG,IAAD,EAAO;AACrB,SAAKL,QAAL,CAAc;AAACnB,MAAAA,YAAY,EAAEwB;AAAf,KAAd;AACD,GA3D6B,CA4D9B;AACA;;;AACAb,EAAAA,SAAS,CAACe,IAAD,EAAO;AACd,UAAM;AAAEtB,MAAAA,aAAF;AACEnB,MAAAA,WADF;AAEEK,MAAAA,UAFF;AAGEF,MAAAA,cAHF;AAIEe,MAAAA,OAJF;AAKEX,MAAAA,aALF;AAMEE,MAAAA;AANF,QAOK,KAAKX,KAPhB;AASA,SAAKuC,cAAL;;AACA,QAAGI,IAAI,CAACC,OAAL,KAAiB,IAApB,EAA0B;AACxB,WAAKR,QAAL,CAAeS,SAAD,IAAe;AAC3B,cAAMC,OAAO,GAAG,EAAC,GAAGH,IAAJ;AACZI,UAAAA,MAAM,EAAE1B,aADI;AACWF,UAAAA,GAAG,EAAE,CADhB;AAEZf,UAAAA,KAAK,EAAEF,WAAW,CAACE,KAFP;AAGZI,UAAAA,IAAI,EAAED,UAAU,CAACC,IAHL;AAIZF,UAAAA,QAAQ,EAAED,cAAc,CAACC,QAJb;AAKZI,UAAAA,GAAG,EAAED,aAAa,CAACC,GALP;AAMZE,UAAAA,OAAO,EAAED,iBAAiB,CAACC;AANf,SAAhB;AAQA,eAAO;AACLS,UAAAA,aAAa,EAAEwB,SAAS,CAACxB,aAAV,GAA0B,CADpC;AAELD,UAAAA,OAAO,EAAE,CAAC,GAAGA,OAAJ,EAAa0B,OAAb;AAFJ,SAAP;AAID,OAbD;AAcD,KAfD,MAeM,KAAKR,gBAAL,CAAsB,IAAtB;AAEP,GA1F6B,CA2F9B;;;AACAC,EAAAA,cAAc,GAAG;AACf,SAAKH,QAAL,CAAc;AAAClC,MAAAA,WAAW,EAAE;AAACC,QAAAA,EAAE,EAAE,EAAL;AAASC,QAAAA,KAAK,EAAE;AAAhB;AAAd,KAAd;AACA,SAAKgC,QAAL,CAAc;AAAC7B,MAAAA,UAAU,EAAE;AAACJ,QAAAA,EAAE,EAAE,EAAL;AAASK,QAAAA,IAAI,EAAE;AAAf;AAAb,KAAd;AACA,SAAK4B,QAAL,CAAc;AAAC/B,MAAAA,cAAc,EAAE;AAACF,QAAAA,EAAE,EAAE,EAAL;AAASG,QAAAA,QAAQ,EAAE;AAAnB;AAAjB,KAAd;AACA,SAAK8B,QAAL,CAAc;AAAC3B,MAAAA,aAAa,EAAE;AAACN,QAAAA,EAAE,EAAE,EAAL;AAASO,QAAAA,GAAG,EAAE;AAAd;AAAhB,KAAd;AACA,SAAK0B,QAAL,CAAc;AAACzB,MAAAA,iBAAiB,EAAE;AAACR,QAAAA,EAAE,EAAE,EAAL;AAASS,QAAAA,OAAO,EAAE;AAAlB;AAApB,KAAd;AACD,GAlG6B,CAmG9B;;;AACAiB,EAAAA,QAAQ,CAACmB,KAAD,EAAQ;AACd,UAAM;AAAE5B,MAAAA;AAAF,QAAc,KAAKpB,KAAzB;AACA,QAAIiD,KAAK,GAAG7B,OAAO,CAAC8B,KAAR,EAAZ;AACED,IAAAA,KAAK,CAACE,MAAN,CAAaH,KAAb,EAAoB,CAApB;AACA,SAAKZ,QAAL,CAAc;AAAChB,MAAAA,OAAO,EAAE6B;AAAV,KAAd;AAEH,GA1G6B,CA2G9B;AACA;;;AACAnB,EAAAA,mBAAmB,CAACsB,IAAD,EAAQC,CAAR,EAAW;AAC5B,SAAKjB,QAAL,CAAc;AAAClC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,EAAE,EAAEkD,CAAN;AAAUjD,QAAAA,KAAK,EAAEgD;AAAjB;AAAd,KAAd;AACD,GA/G6B,CAgH9B;AACA;;;AACArB,EAAAA,kBAAkB,CAACqB,IAAD,EAAOC,CAAP,EAAU;AAC1B,SAAKjB,QAAL,CAAc;AAAC7B,MAAAA,UAAU,EAAE;AAACJ,QAAAA,EAAE,EAAEkD,CAAL;AAAQ7C,QAAAA,IAAI,EAAE4C;AAAd;AAAb,KAAd;AACD,GApH6B,CAqH9B;AACA;;;AACApB,EAAAA,sBAAsB,CAACoB,IAAD,EAAOC,CAAP,EAAU;AAC9B,SAAKjB,QAAL,CAAc;AAAC/B,MAAAA,cAAc,EAAE;AAACF,QAAAA,EAAE,EAAEkD,CAAL;AAAQ/C,QAAAA,QAAQ,EAAE8C;AAAlB;AAAjB,KAAd;AACD,GAzH6B,CA0H9B;AACA;;;AACAnB,EAAAA,qBAAqB,CAACmB,IAAD,EAAOC,CAAP,EAAU;AAC3B,SAAKjB,QAAL,CAAc;AAAC3B,MAAAA,aAAa,EAAE;AAACN,QAAAA,EAAE,EAAEkD,CAAL;AAAQ3C,QAAAA,GAAG,EAAE0C;AAAb;AAAhB,KAAd;AACD,GA9H2B,CAgI9B;AACA;;;AACAlB,EAAAA,yBAAyB,CAACkB,IAAD,EAAOC,CAAP,EAAU;AACjC,SAAKjB,QAAL,CAAc;AAACzB,MAAAA,iBAAiB,EAAE;AAACR,QAAAA,EAAE,EAAEkD,CAAL;AAAQC,QAAAA,WAAW,EAAEF;AAArB;AAApB,KAAd;AACD;;AAGDG,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEnC,MAAAA,OAAF;AACEP,MAAAA,eADF;AAEEG,MAAAA,SAFF;AAGEF,MAAAA,eAHF;AAIEC,MAAAA,aAJF;AAKEE,MAAAA,YALF;AAMEf,MAAAA,WANF;AAOEG,MAAAA,cAPF;AAQEE,MAAAA,UARF;AASEI,MAAAA,iBATF;AAUEF,MAAAA,aAVF;AAWES,MAAAA;AAXF,QAYI,KAAKlB,KAZf;AAcA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACQ,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,gCACA,QAAC,MAAD;AACE,UAAA,gBAAgB,EAAI,KAAKsB,cAD3B;AAEE,UAAA,OAAO,EAAI,KAAKE,OAFlB;AAGE,UAAA,SAAS,EAAI,KAAKE,aAHpB;AAIE,UAAA,YAAY,EAAIN,OAAO,CAACoC,MAJ1B;AAKE,UAAA,QAAQ,EAAI3C;AALd;AAAA;AAAA;AAAA;AAAA,gBADA,EAQCG,SAAS,KAAK,IAAd,gBAAqB,QAAC,WAAD;AACpB,UAAA,SAAS,EAAI,KAAKW,SADE;AAEpB,UAAA,MAAM,EAAIP,OAFU;AAGpB,UAAA,QAAQ,EAAIP,eAHQ;AAIpB,UAAA,KAAK,EAAIK;AAJW;AAAA;AAAA;AAAA;AAAA,gBAArB,GAKQ,EAbT,eAcE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,EAAE,IAAvB;AACC,YAAA,OAAO,eAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,kBADF,eAKA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEJ,eAAb;AACE,YAAA,OAAO,eAAG,QAAC,OAAD;AAAS,cAAA,GAAG,EAAIA,eAAhB;AACV,cAAA,aAAa,EAAG,KAAKW,cADX;AAEV,cAAA,QAAQ,EAAIZ;AAFF;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,kBALA,eAWA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEC,eAAe,GAAG,GAAlB,GAAwBC,aAAa,CAACZ,EAAnD;AACE,YAAA,OAAO,eAAG,QAAC,GAAD;AACV,cAAA,cAAc,EAAIY,aADR;AAEV,cAAA,eAAe,EAAI,KAAKa,SAFd;AAGV,cAAA,QAAQ,EAAIf,eAHF;AAIV,cAAA,mBAAmB,EAAI,KAAKiB,mBAJlB;AAKV,cAAA,kBAAkB,EAAI,KAAKC,kBALjB;AAMV,cAAA,sBAAsB,EAAI,KAAKC,sBANrB;AAOV,cAAA,yBAAyB,EAAI,KAAKE,yBAPxB;AAQV,cAAA,qBAAqB,EAAI,KAAKD,qBARpB;AASV,cAAA,YAAY,EAAIhB,YATN;AAUV,cAAA,WAAW,EAAIf,WAVL;AAWV,cAAA,cAAc,EAAIG,cAXR;AAYV,cAAA,UAAU,EAAIE,UAZJ;AAaV,cAAA,iBAAiB,EAAII,iBAbX;AAcV,cAAA,aAAa,EAAIF;AAdP;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,kBAXA,eA+BA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AACE,YAAA,OAAO,eAAG,QAAC,IAAD;AACV,cAAA,eAAe,EAAIW,OADT;AAEV,cAAA,QAAQ,EAAIP,eAFF;AAGV,cAAA,QAAQ,EAAI,KAAKgB;AAHP;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,kBA/BA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YADF;AA0DD;;AAjN6B;;AAqNhC,eAAehC,GAAf","sourcesContent":["import { React, PureComponent } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Content from \"./component/content/Content\";\nimport Header from \"./component/header/Header\";\nimport Home from \"./component/home/Home\";\nimport PDP from \"./component/pdp/PDP\";\nimport CardOverlay from \"./component/card-overlay/CardOverlay\";\nimport Cart from './component/cart/Cart';\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n      pickedColor: [{id: \"\", color: \"\"}],\n      pickedCapacity: [{id: \"\", capacity: \"\"}],\n      pickedSize: [{id: \"\", size: \"\"}],\n      pickedWithUsb: [{id: \"\", usb: \"\"}],\n      pickedWithTouchID: [{id: \"\", touchID: \"\"}],\n      currentCurrency: \"$\",\n      productCategory: \"all\",\n      productDetail: [],\n      openClose: false,\n      notAvailable: false,\n      total:[0],\n      qty: '',\n      product: [\n\n      ],\n      nextProductId: 0,\n    }\n    \n    this.changeCurrency = this.changeCurrency.bind(this);\n    this.setLink = this.setLink.bind(this);\n    this.productDetails = this.productDetails.bind(this);\n    this.openCloseCard = this.openCloseCard.bind(this);\n    this.closeCard = this.closeCard.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.handleAttributColor = this.handleAttributColor.bind(this);\n    this.handleAttributSize = this.handleAttributSize.bind(this);\n    this.handleAttributCapacity = this.handleAttributCapacity.bind(this);\n    this.handleAttributWithUSB = this.handleAttributWithUSB.bind(this);\n    this.handleAttributWithTouchID = this.handleAttributWithTouchID.bind(this);\n  }\n\n  changeCurrency(curr) {\n    this.setState({currentCurrency: curr})\n  }\n\n  setLink(link) {\n    this.notAvailableItem(false)\n    this.restAttributes();\n    this.setState({productCategory: link})\n  }\n\n  productDetails(details) {\n    this.setState({productDetail: details})\n  }\n\n  openCloseCard(bool) {\n    this.setState({openClose: !bool})\n  }\n  closeCard(close) {\n    this.setState({openClose: close})\n  }\n  notAvailableItem(bool) {\n    this.setState({notAvailable: bool})\n  }\n  //Add customer product to card\n  //param picked item object\n  addToCart(item) {\n    const { nextProductId,\n            pickedColor,\n            pickedSize,\n            pickedCapacity,\n            product,\n            pickedWithUsb,\n            pickedWithTouchID\n           } = this.state;\n\n    this.restAttributes();\n    if(item.inStock === true) {\n      this.setState((prevState) => {\n        const newItem = {...item,\n            itemId: nextProductId, qty: 1,\n            color: pickedColor.color,\n            size: pickedSize.size,\n            capacity: pickedCapacity.capacity,\n            usb: pickedWithUsb.usb,\n            touchID: pickedWithTouchID.touchID\n      };\n        return {\n          nextProductId: prevState.nextProductId + 1,\n          product: [...product, newItem]\n        }\n      })\n    }else this.notAvailableItem(true)\n\n  }\n  //reset all attributes\n  restAttributes() {\n    this.setState({pickedColor: {id: \"\", color: \"\"}})\n    this.setState({pickedSize: {id: \"\", size: \"\"}})\n    this.setState({pickedCapacity: {id: \"\", capacity: \"\"}})\n    this.setState({pickedWithUsb: {id: \"\", usb: \"\"}})\n    this.setState({pickedWithTouchID: {id: \"\", touchID: \"\"}})\n  }\n  //Delete Item array\n  onDelete(index) {\n    const { product } = this.state;\n    var array = product.slice();\n      array.splice(index, 1);\n      this.setState({product: array})  \n\n  }\n  //Set picked Item Color\n  //@param attr string, i int\n  handleAttributColor(attr , i) {\n    this.setState({pickedColor: { id: i , color: attr}})\n  }\n  //Set picked Item Size\n  //@param attr string, i int\n  handleAttributSize(attr, i) {\n    this.setState({pickedSize: {id: i, size: attr}})\n  }\n  //Set picked Item Capacity\n  //@param attr string, i int\n  handleAttributCapacity(attr, i) {\n    this.setState({pickedCapacity: {id: i, capacity: attr}})\n  }\n  //Set picked Item usb\n  //@param attr string, i int\n  handleAttributWithUSB(attr, i) {\n      this.setState({pickedWithUsb: {id: i, usb: attr}})\n    }\n\n  //Set picked Item with touch id\n  //@param attr string, i int\n  handleAttributWithTouchID(attr, i) {\n    this.setState({pickedWithTouchID: {id: i, withTouchID: attr}})\n  }\n\n\n  render() {\n\n    const { product,\n            currentCurrency,\n            openClose,\n            productCategory,\n            productDetail,\n            notAvailable,\n            pickedColor,\n            pickedCapacity,\n            pickedSize,\n            pickedWithTouchID,\n            pickedWithUsb,\n            total\n          } = this.state;\n    \n    return (\n      <div className=\"App\"> \n              <Router className=\"router\">\n              <Header\n                onChangeCurrency = {this.changeCurrency}\n                setLink = {this.setLink}\n                openClose = {this.openCloseCard}\n                productCount = {product.length}\n                currency = {currentCurrency}\n                />\n              {openClose === true ? <CardOverlay\n                closeCard = {this.closeCard}\n                toCart = {product}\n                currency = {currentCurrency}\n                total = {total}\n                  /> : ''}\n                <Routes>\n                  <Route path=\"/\" exact={true}\n                   element= {<Home />}\n                  />\n\n                <Route path={productCategory}\n                  element= {<Content cat = {productCategory} \n                  productDetail ={this.productDetails}\n                  currency = {currentCurrency} />} \n                    />\n\n                <Route path={productCategory + \"/\" + productDetail.id}  \n                  element= {<PDP\n                  productDetails = {productDetail}\n                  selectedProduct = {this.addToCart}\n                  currency = {currentCurrency}\n                  handleAttributColor = {this.handleAttributColor}\n                  handleAttributSize = {this.handleAttributSize}\n                  handleAttributCapacity = {this.handleAttributCapacity}\n                  handleAttributWithTouchID = {this.handleAttributWithTouchID}\n                  handleAttributWithUSB = {this.handleAttributWithUSB}\n                  notAvailable = {notAvailable}\n                  pickedColor = {pickedColor}\n                  pickedCapacity = {pickedCapacity}\n                  pickedSize = {pickedSize}\n                  pickedWithTouchID = {pickedWithTouchID}\n                  pickedWithUsb = {pickedWithUsb}\n                  \n                  />} \n                  />\n\n                <Route path=\"cart\"\n                  element= {<Cart \n                  selectedProduct = {product}\n                  currency = {currentCurrency}\n                  onDelete = {this.onDelete}\n                  />} \n                  />\n                </Routes>\n            </Router>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
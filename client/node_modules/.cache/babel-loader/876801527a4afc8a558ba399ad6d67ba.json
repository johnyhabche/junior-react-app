{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\component\\\\pdp\\\\PDP.js\";\nimport { React, PureComponent } from 'react';\nimport './styles/PDP.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst parse = require('html-react-parser');\n\nclass PDP extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gallery: [],\n      topImg: \"\",\n      pickedColor: false\n    };\n  }\n\n  handleRenderProduct() {\n    console.log();\n  }\n\n  componentDidMount() {\n    this.setState({\n      product: this.props.productDetails\n    });\n    this.setState({\n      gallery: this.props.productDetails.gallery\n    });\n    this.setState({\n      topImg: this.props.productDetails.gallery[0]\n    });\n  } //set picked product image to primary picture\n\n\n  handleImagePick(imageLink) {\n    this.setState({\n      topImg: imageLink\n    });\n  } //render product gallery\n\n\n  renderGallery() {\n    const {\n      gallery\n    } = this.state;\n    return gallery.map((item, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"top-img\",\n      onClick: () => this.handleImagePick(item),\n      alt: \"\",\n      src: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this));\n  }\n\n  renderAtrributes() {\n    const {\n      handleAttributCapacity,\n      handleAttributColor,\n      handleAttributSize,\n      handleAttributWithUSB,\n      productDetails,\n      pickedColor,\n      pickedCapacity,\n      pickedSize,\n      pickedWithUsb,\n      handleAttributWithTouchID,\n      pickedWithTouchID\n    } = this.props;\n    return productDetails.attributes.map((attr, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: attr.name + \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributes-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attributes-list\",\n          children: attr.items.map((items, i) => attr.name === \"Color\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attr-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleAttributColor(items.displayValue, i),\n              className: `${items.displayValue} attributess`\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this), pickedColor.id === i && pickedColor.color === items.displayValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"picked-attr\",\n              children: items.displayValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 94\n            }, this) : \"\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this) : attr.name === \"Size\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attr-container\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleAttributSize(items.displayValue, i),\n              className: `atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`,\n              children: !isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 27\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this) : attr.name === \"Capacity\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attr-container\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleAttributCapacity(items.displayValue, i),\n              className: `atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`,\n              children: items.displayValue\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 27\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this) : attr.name === \"With USB 3 ports\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attr-container\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleAttributWithUSB(items.displayValue, i),\n              className: `atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`,\n              children: items.displayValue\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 27\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this) : attr.name === \"Touch ID in keyboard\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attr-container\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleAttributWithTouchID(items.displayValue, i),\n              className: `atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`,\n              children: items.displayValue\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 27\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this) : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this));\n  }\n\n  render() {\n    const {\n      currency,\n      notAvailable,\n      productDetails,\n      selectedProduct\n    } = this.props;\n    const {\n      topImg\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdp-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-gallery\",\n        children: this.renderGallery()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: topImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-information\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: productDetails.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: productDetails.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sizes-container\",\n          children: this.renderAtrributes()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\" \", currency, \" \", productDetails.prices.map((cur, index) => currency === cur.currency.symbol ? cur.amount : \"\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-to-card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => selectedProduct(productDetails),\n            className: productDetails.inStock === true ? \"add-to-card\" : \"disabled-btn\",\n            children: \"add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"not-avai;able-item\",\n            children: notAvailable === true ? /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \" item not available! \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 48\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"product-des\",\n          children: parse(productDetails.description)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PDP;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/component/pdp/PDP.js"],"names":["React","PureComponent","parse","require","PDP","constructor","props","state","gallery","topImg","pickedColor","handleRenderProduct","console","log","componentDidMount","setState","product","productDetails","handleImagePick","imageLink","renderGallery","map","item","index","renderAtrributes","handleAttributCapacity","handleAttributColor","handleAttributSize","handleAttributWithUSB","pickedCapacity","pickedSize","pickedWithUsb","handleAttributWithTouchID","pickedWithTouchID","attributes","attr","name","items","i","displayValue","id","color","size","isNaN","charAt","capacity","usb","withTouchID","render","currency","notAvailable","selectedProduct","brand","prices","cur","symbol","amount","inStock","description"],"mappings":"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","sourcesContent":["import { React, PureComponent  } from 'react';\r\n\r\nimport './styles/PDP.css';\r\n\r\nconst parse = require('html-react-parser');\r\nclass PDP extends PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        gallery: [],\r\n        topImg: \"\",\r\n        pickedColor: false,\r\n      }\r\n      \r\n    }\r\n    handleRenderProduct() {\r\n      console.log()\r\n    }\r\n    componentDidMount() {\r\n     this.setState({product: this.props.productDetails})\r\n     this.setState({gallery: this.props.productDetails.gallery});\r\n     this.setState({topImg: this.props.productDetails.gallery[0]})\r\n    }\r\n\r\n    //set picked product image to primary picture\r\n    handleImagePick(imageLink) {\r\n      this.setState({topImg: imageLink})\r\n      \r\n    }\r\n    \r\n    //render product gallery\r\n    renderGallery() {\r\n      const { gallery } = this.state;\r\n      return ( gallery.map((item, index) => (\r\n\r\n        <img className='top-img' onClick={ () => this.handleImagePick(item)} alt=\"\" key={index} src={item} />\r\n      )  \r\n    ))\r\n    }\r\n\r\n    renderAtrributes() {\r\n\r\n      const {\r\n        handleAttributCapacity,\r\n        handleAttributColor,\r\n        handleAttributSize,\r\n        handleAttributWithUSB,\r\n        productDetails,\r\n        pickedColor,\r\n        pickedCapacity,\r\n        pickedSize,\r\n        pickedWithUsb,\r\n        handleAttributWithTouchID,\r\n        pickedWithTouchID\r\n      } = this.props\r\n\r\n      return (\r\n        productDetails.attributes.map((attr, index) => (\r\n              <div key={index}>\r\n              <h6>{attr.name + \":\"}</h6>\r\n              <div className='attributes-container'>\r\n                  \r\n                    <div  className='attributes-list'>\r\n                    {attr.items.map((items, i) => (\r\n                        \r\n                        attr.name === \"Color\" ?\r\n              \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributColor(items.displayValue, i)} className={`${items.displayValue} attributess`} >\r\n\r\n                          </li>\r\n                          {pickedColor.id === i && pickedColor.color === items.displayValue ?<p className='picked-attr'>{items.displayValue}</p> : \"\"}\r\n                        </div>\r\n                        : \r\n                        attr.name === \"Size\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributSize(items.displayValue, i)} className={`atributes ${pickedSize.id === i && pickedSize.size === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n                          {!isNaN(items.displayValue) ? items.displayValue : items.displayValue.charAt(0)}\r\n                          </li>\r\n                        </div> \r\n                        : \r\n                        attr.name === \"Capacity\" ? \r\n                        <div className='attr-container' key={i}> \r\n                          <li key={i}  onClick={ () => handleAttributCapacity(items.displayValue, i)} className={`atributes ${pickedCapacity.id === i && pickedCapacity.capacity === items.displayValue ? \"black-bg\" : \"\"}`} >\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        :\r\n                        attr.name === \"With USB 3 ports\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributWithUSB(items.displayValue, i) } className={`atributes ${pickedWithUsb.id === i && pickedWithUsb.usb === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        : \r\n                        attr.name === \"Touch ID in keyboard\" ? \r\n                        <div className='attr-container' key={i}>\r\n                          <li key={i} onClick={ () => handleAttributWithTouchID(items.displayValue, i)} className={`atributes ${pickedWithTouchID.id === i && pickedWithTouchID.withTouchID === items.displayValue ? \"black-bg\" : \"\"}`}>\r\n                          {items.displayValue}\r\n                          </li>\r\n                        </div>\r\n                        : \"\"\r\n\r\n                      ))}\r\n                    </div>\r\n              </div>\r\n            </div>\r\n              \r\n          ))\r\n      )\r\n    }\r\n\r\n    render() {\r\n\r\n      const { \r\n        currency,\r\n        notAvailable,\r\n        productDetails,\r\n        selectedProduct} = this.props \r\n\r\n      const { topImg } = this.state \r\n\r\n      return (\r\n        <div className='pdp-container'>\r\n            <div className='product-gallery'>\r\n\r\n            {this.renderGallery()}\r\n\r\n            </div>\r\n            <div className='product-image'>\r\n                <img alt='' src={topImg} />\r\n            </div>\r\n            <div className='card-information'>\r\n                <h1>{productDetails.name}</h1>\r\n                <h2>{productDetails.brand}</h2>\r\n\r\n                <div className='sizes-container'>\r\n\r\n                {this.renderAtrributes()}\r\n                \r\n                </div>\r\n\r\n                <h6> {currency} {productDetails.prices.map((cur, index) => (\r\n                  currency === cur.currency.symbol ? cur.amount : \"\"\r\n                ))}\r\n                </h6>\r\n                <div className='add-to-card-container'>\r\n                    <button onClick={ () => selectedProduct(productDetails)} className={ productDetails.inStock === true ? \"add-to-card\" : \"disabled-btn\" }>\r\n                        add to cart\r\n                    </button>\r\n                    <div className='not-avai;able-item'>\r\n                      {notAvailable === true ? <h6> item not available! </h6> : \"\" }\r\n                    </div>\r\n                </div>\r\n                <p className='product-des'>\r\n                {parse(productDetails.description)}\r\n                </p>\r\n            </div>\r\n        </div>\r\n      ) \r\n    }\r\n  }\r\n\r\n  export default PDP;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\scandiweb-project\\\\client\\\\src\\\\component\\\\header\\\\Header.js\";\nimport { React, Component } from 'react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport { NavLink } from \"react-router-dom\";\nimport NavbarData from './NavbarData';\nimport './styles/Header.css';\nimport './styles/Actions.css';\nimport './styles/Logo.css';\nimport './styles/Navigation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n});\nconst currency = client.query({\n  query: gql`\n    {\n      currencies {\n        label\n        symbol\n      }\n      }\n    `\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: [],\n      selectedOption: \"\"\n    };\n    this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\n    this.changeQuery = this.changeQuery.bind(this);\n  }\n\n  componentDidMount() {\n    currency.then(res => this.setState({\n      currencies: res.data.currencies\n    }));\n  } //send category type to app.js \n\n\n  changeQuery(categoryType) {\n    this.props.onChangeCategory(categoryType);\n    this.props.setProductDetail();\n  } //handel currency celected option and send it to app.js\n\n\n  handleCurrencyChange(e) {\n    this.props.onChangeCurrency(e.target.value);\n    this.setState({\n      selectedOption: e.target.value\n    });\n  }\n\n  openCloseCard(bool) {\n    this.setState({\n      openClose: !bool\n    });\n    this.props.openClose(!bool);\n  }\n\n  render() {\n    const Navbar = NavbarData.map((_ref, index) => {\n      let {\n        title,\n        url\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          onClick: () => this.props.setLink(url),\n          to: url,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    });\n    const currencyData = this.state.currencies.map((t, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: t.symbol,\n      className: \"currency-option\",\n      children: [t.symbol, \" \", t.label]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: Navbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"logo\",\n            src: \"./a-logo.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.handleCurrencyChange,\n          children: currencyData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"shopping-cart\",\n          onClick: () => this.openCloseCard(this.state.openClose),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-shopping-cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 104\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"item-qty\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 145\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/USER/Desktop/scandiweb-project/client/src/component/header/Header.js"],"names":["React","Component","ApolloClient","InMemoryCache","gql","NavLink","NavbarData","client","uri","cache","currency","query","Header","constructor","props","state","currencies","selectedOption","handleCurrencyChange","bind","changeQuery","componentDidMount","then","res","setState","data","categoryType","onChangeCategory","setProductDetail","e","onChangeCurrency","target","value","openCloseCard","bool","openClose","render","Navbar","map","index","title","url","setLink","currencyData","t","i","symbol","label"],"mappings":"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","sourcesContent":["import { React, Component } from 'react';\r\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { gql } from '@apollo/client';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NavbarData from './NavbarData';\r\n\r\nimport './styles/Header.css';\r\nimport './styles/Actions.css';\r\nimport './styles/Logo.css';\r\nimport './styles/Navigation.css';\r\n\r\nconst client = new ApolloClient({\r\n    uri:'http://localhost:4000/graphql',\r\n    cache: new InMemoryCache()\r\n  })\r\n  \r\n  \r\n  const currency = client.query({\r\n    query: gql`\r\n    {\r\n      currencies {\r\n        label\r\n        symbol\r\n      }\r\n      }\r\n    `\r\n  })\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          currencies: [],\r\n          selectedOption: \"\",\r\n    \r\n        }\r\n        this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\r\n        this.changeQuery = this.changeQuery.bind(this);\r\n      }\r\n      componentDidMount() {\r\n        currency\r\n        .then(res => this.setState({currencies: res.data.currencies}))\r\n    \r\n      }\r\n      //send category type to app.js \r\n      changeQuery(categoryType) {\r\n        this.props.onChangeCategory(categoryType)\r\n        this.props.setProductDetail()\r\n      }\r\n      //handel currency celected option and send it to app.js\r\n      handleCurrencyChange(e){\r\n        this.props.onChangeCurrency(e.target.value)\r\n        this.setState({selectedOption: e.target.value })\r\n      }\r\n      openCloseCard(bool){\r\n        this.setState({openClose: !bool})\r\n        this.props.openClose(!bool)\r\n      }\r\n      \r\n    render() {\r\n        const Navbar = NavbarData.map(({title, url},index) => (\r\n            <li key={index}>\r\n                <NavLink onClick={ () => this.props.setLink(url)} to={url}>{title}</NavLink>\r\n            </li>\r\n        ))\r\n        const currencyData = this.state.currencies.map((t,i) => (\r\n\r\n            <option \r\n              key={i}\r\n              value={t.symbol}\r\n              className='currency-option'\r\n            >{t.symbol} {t.label}</option >\r\n    \r\n        ))\r\n      return (\r\n        <div className='header'>\r\n            <div className='navigation'>\r\n                {Navbar}\r\n            </div>\r\n\r\n            <div className='logo'>\r\n                <NavLink to={\"/\"}>\r\n                   <img alt='logo' src='./a-logo.png' />\r\n                </NavLink>\r\n            </div>\r\n\r\n            <div className='actions'>\r\n            <select onChange={this.handleCurrencyChange}>\r\n              {currencyData}\r\n            </select>\r\n\r\n                <li className='shopping-cart' onClick={() => this.openCloseCard(this.state.openClose)}><i className=\"fas fa-shopping-cart\"></i> <span className='item-qty'>2</span></li>\r\n            </div>\r\n\r\n        </div>\r\n      ) \r\n    }\r\n  }\r\n\r\n  export default Header;"]},"metadata":{},"sourceType":"module"}